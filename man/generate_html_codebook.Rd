% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generate_html_codebook.R
\encoding{UTF-8}
\name{generate_html_codebook}
\alias{generate_html_codebook}
\title{CodeBook HTML 组件}
\usage{
generate_html_codebook(heat_df, meta_df, file = NULL)
}
\arguments{
\item{heat_df}{\code{data.frame} – 见 \strong{输入数据格式}}

\item{meta_df}{\code{data.frame} – 见 \strong{输入数据格式}}

\item{file}{\code{character(1)} | \code{NULL}
- 目标 HTML 路径；\code{NULL} 时仅返回字符串（默认）}
}
\value{
字符串形式的 HTML 代码；若 \code{file} 非空，还会写入该文件。
返回值 \strong{invisibly} 便于管道操作。
}
\description{
\strong{\code{generate_html_codebook()}} 将两个已格式化的数据框组合为一段\strong{自包含的
HTML 片段}，包括
\enumerate{
\item \strong{模块概览}：按 \emph{category} 分组的频数热力图
\item \strong{变量详情}：可折叠的 \emph{variable-map} 卡片（点击展开标签 / 取值说明）
\itemize{
\item 变量名、原始变量映射、简要描述、详细注释
}
}

该片段可以直接插入 R Markdown / Shiny / Quarto，或写入文件并在浏览器中
打开。所有样式（CSS）、交互逻辑（JS）均已内嵌，无外部依赖。
}
\details{
\subsection{输入数据格式}{
\itemize{
\item \strong{\code{heat_df}}\tabular{ll}{
   必含列 \tab 说明 \cr
   \code{category} \tab 一级分类（将生成 \emph{details} 折叠块） \cr
   \code{variable} \tab 变量名（将生成锚点 \verb{#var-<variable>}） \cr
   年份列 \tab \strong{以 4 位数字}或 \strong{\code{Year} / \code{Wave}} 开头的列（如\code{2019},  \code{Year2019}, \code{Wave_1}） (= 年度频数 / 统计量) \cr
   其他列 \tab 视为 \emph{辅助信息}，会显示在热力图左侧 \cr
}

\item \strong{\code{meta_df}}\tabular{ll}{
   必含列 \tab 说明 \cr
   \code{variable} \tab 必须与 \code{heat_df$variable} 一一匹配 \cr
   \code{original} \tab 原始变量名称（可用逗号分隔多个） \cr
   \code{summary} \tab 一句话摘要 \cr
   \code{detail} \tab \strong{已编码/转义好的} HTML 字符串，作为展开内容 \cr
   其余列将被忽略。 \tab  \cr
}

}
}

\subsection{颜色与布局}{
\itemize{
\item 渐变只按 \strong{年份列} 取值全局计算；\code{0} 或 \code{NA} 单元格留白。
\item 奇数行：白 → \verb{#264653}；偶数行：白 → 深红 (\verb{#8b0000})。
\item 表头和分类标题使用深色圆角条以保持视觉一致。
}
}

\subsection{交互}{
\itemize{
\item 热力图中的变量名、分类名自动生成锚点，可与变量卡片互相跳转。
\item 点击 \strong{卡片本身} 切换显示 / 隐藏标签内容（无需箭头按钮）。
}
}

\subsection{注意事项}{
\enumerate{
\item \strong{字符编码}：函数按 \emph{UTF-8} 写文件；Windows 用户请使用 UTF-8 R 会话或后续
用 \code{fileEncoding = 'UTF-8'} 读取。
\item \strong{\code{detail} 列务必自行 \code{htmlEscape()} 或手动写安全 HTML}——函数不会再次
转义它（便于插入 \verb{<ul><li>} 等复杂格式）。
\item 如果某分类下无行数据，\code{split()} 会生成空块；当前实现会自动跳过，不会报错。
\item 本函数仅输出 \strong{片段}，若需完整网页请自行包裹
\verb{<!DOCTYPE html><html><head>…</head><body> … </body></html>}。
\item 依赖包：\code{htmltools}；其余均为基准 R。
}
}
}
\examples{
\dontrun{
# 构造示例数据 ----
heat_df <- data.frame(
  category = rep(c("Demographics", "Labs"), each = 2),
  variable = c("AGE", "SEX", "HB", "GLU"),
  `2017`   = c(10102, 10109, 9980, 9870),
  `2019`   = c( 9875,  9901, 9720, 9600),
  units    = c("years", "", "g/dL", "mg/dL"),
  stringsAsFactors = FALSE
)

meta_df <- data.frame(
  variable = c("AGE", "SEX", "HB", "GLU"),
  original = c("RIDAGEYR", "RIAGENDR", "LBXHGB", "LBXGLU"),
  summary  = c("Age at exam", "Sex", "Hemoglobin", "Fasting glucose"),
  detail   = c(
    "Continuous variable (0–80).",
    "1 = Male, 2 = Female.",
    "<p>Measured via Coulter&nbsp;LH 700.</p>",
    "<em>mmol/L</em> converted to mg/dL ×18."
  ),
  stringsAsFactors = FALSE
)

# 生成并写入
generate_html_codebook(heat_df, meta_df, file = "codebook_demo.html")
}
}

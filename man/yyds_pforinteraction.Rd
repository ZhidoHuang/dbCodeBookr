% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yyds_pforinteraction.R
\name{yyds_pforinteraction}
\alias{yyds_pforinteraction}
\title{计算回归模型中的交互作用P值}
\usage{
yyds_pforinteraction(fit, var1, var2)
}
\arguments{
\item{fit}{已拟合的回归模型，支持的模型类型包括：\code{"glm"}、\code{"lm"}、\code{"coxph"}、\code{"svyglm"}、\code{"svycoxph"}}

\item{var1}{字符串，第一个参与交互项的变量名}

\item{var2}{字符串，第二个参与交互项的变量名}
}
\value{
返回交互作用P值（字符型），（保留4位小数，小于0.001时显示为 "<0.001"）。
}
\description{
计算两个变量交互项的P值，支持普通模型和复杂抽样设计模型。
会根据模型类型自动选择检验方法：
\itemize{
\item 对于 \code{glm}、\code{lm}、\code{coxph} 模型，使用似然比检验（LRT）
\item 对于 \code{svyglm}、\code{svycoxph} 模型，使用 Wald 检验（\code{regTermTest()}）
}
}
\examples{
library(survey)
library(survival)

# 模拟数据
set.seed(123)
df <- data.frame(
  weight = runif(300, 1, 3),
  strata = sample(1:3, 300, replace = TRUE),
  psu = sample(1:15, 300, replace = TRUE),
  time = rexp(300, 0.1),
  status = sample(0:1, 300, replace = TRUE),
  var1 = factor(sample(c("low", "high"), 300, replace = TRUE)),
  var2 = rnorm(300),
  age = sample(20:70, 300, replace = TRUE),
  sex = factor(sample(c("M", "F"), 300, replace = TRUE))
)

# 创建 survey design 对象
design <- svydesign(ids = ~psu, strata = ~strata, weights = ~weight, data = df, nest = TRUE)

# 拟合包含交互项的 svycoxph 模型
fit_inter <- svycoxph(Surv(time, status) ~ var1 * var2 + age + sex, design = design)

# Wald 检验交互项 var1:var2 的显著性
test_result <- regTermTest(fit_inter, ~ var1:var2, method = "Wald")
print(test_result)

# 使用自定义函数进行交互项检验
fit <- svycoxph(Surv(time, status) ~ var1 + var2 + age + sex, design = design)
yyds_pforinteraction(fit, "var1", "var2")

# glm模型
fit <- glm(status ~ var1 + var2 + age + sex, data = df, family = binomial())
fit_inter <- glm(status ~ var1 * var2 + age + sex, data = df, family = binomial())
anova(fit, fit_inter, test = "Chisq")

# 使用自定义函数进行交互项检验
yyds_pforinteraction(fit, "var1", "var2")

}

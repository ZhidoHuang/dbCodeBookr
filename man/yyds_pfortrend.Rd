% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/yyds_pfortrend.R
\name{yyds_pfortrend}
\alias{yyds_pfortrend}
\title{计算变量的趋势性 P 值}
\usage{
yyds_pfortrend(fit, var)
}
\arguments{
\item{fit}{回归模型对象，支持 \code{coxph}、\code{glm}、\code{lm}、（\code{svyglm} 和 \code{svycoxph}，待测试）。}

\item{var}{变量名，应为具有等级顺序的变量（如有序因子或整数型）。}
}
\value{
返回趋势性 P 值（字符型）（保留4位小数，小于0.001时显示为 "<0.001"）。
}
\description{
该函数用于计算回归模型中指定变量作为连续变量时的趋势P值，
支持多种回归模型类型（线性、逻辑、Cox等）。
}
\examples{
library(survival)
library(dplyr)
library(survey)
set.seed(42)
n <- 500

dt_test <- data.frame(
  y_continuous = rnorm(n, 100, 15),
  y_count = rpois(n, lambda = 3),
  y_bin = rbinom(n, 1, 0.4),
  time = rexp(n, 0.1),
  status = rbinom(n, 1, 0.5),
  exposure = sample(1:4, n, replace = TRUE),
  age = rnorm(n, 50, 10),
  sex = sample(c(0, 1), n, replace = TRUE),
  bmi = rnorm(n, 25, 4),
  weight = runif(n, 1, 2),
  strata = sample(1:5, n, replace = TRUE),
  psu = sample(1:10, n, replace = TRUE)
)
## 线性模型
dt_test$exposure <- factor(dt_test$exposure, levels = 1:4, labels = c("Q1", "Q2", "Q3", "Q4"))
fit_lm <- lm(y_continuous ~ exposure + age + sex + bmi, data = dt_test)

# 一般计算
dt_test$exposure_trend <- as.numeric(dt_test$exposure)
fit_lm_trend <- lm(y_continuous ~ exposure_trend + age + sex + bmi, data = dt_test)
summary(fit_lm_trend)$coefficients["exposure_trend", "Pr(>|t|)"]
# 使用函数计算
yyds_pfortrend(fit_lm, "exposure")


## 泊松回归
fit_poisson <- glm(y_count ~ exposure + age + sex + bmi,
                  family = poisson(),
                   data = dt_test)
# 一般计算
fit_poisson_trend <- glm(y_count ~ exposure_trend + age + sex + bmi,
                         family = poisson(), data = dt_test)
summary(fit_poisson_trend)$coefficients["exposure_trend", "Pr(>|z|)"]
yyds_pfortrend(fit_poisson, "exposure")


## 加权
design_svy <- svydesign(
  id = ~psu,
  strata = ~strata,
  weights = ~weight,
  data = dt_test,
  nest = TRUE
)

## 加权逻辑回归
fit_svyglm <- svyglm(y_bin ~ exposure + age + sex + bmi,
                     design = design_svy,
                     family = quasibinomial())
# 一般计算
design_svy$variables$exposure_trend <- as.numeric(design_svy$variables$exposure)
fit_svyglm_trend <- svyglm(y_bin ~ exposure_trend + age + sex + bmi,
                           design = design_svy,
                           family = quasibinomial())
summary(fit_svyglm_trend)$coefficients["exposure_trend", "Pr(>|t|)"]

# 使用函数计算
yyds_pfortrend(fit_svyglm, "exposure")

## 加权cox回归
fit_svycox <- svycoxph(Surv(time, status) ~ exposure + age + sex + bmi,
                       design = design_svy)
# 一般计算
fit_svycox_trend <- svycoxph(Surv(time, status) ~ exposure_trend + age + sex + bmi,
                             design = design_svy)
summary(fit_svycox_trend)$coefficients["exposure_trend", "Pr(>|z|)"]

# 使用函数计算
yyds_pfortrend(fit_svycox, "exposure")

}
